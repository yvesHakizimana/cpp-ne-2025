@startuml Rwanda Cities System Flowchart

' Main program flow
start
:Initialize RwandaCitiesSystem;
:Load Default Cities;
repeat
  :Display Menu;
  :Get User Choice;
  switch (User Choice)
    case (1)
      :Add New Cities;
      :Get number of cities to add;
      while (For each city) is (more cities)
        :Get city name;
        repeat
          :Validate city name;
        repeat while (Invalid) is (yes)
        ->Valid;
        :Add city to map;
      endwhile (no more cities)
      :Update matrices;
      :Save cities to file;
    case (2)
      :Add Roads Between Cities;
      :Get first city name;
      :Get second city name;
      :Find city IDs;
      if (Cities found?) then (yes)
        if (Road exists?) then (no)
          :Add road to matrix;
          :Save roads to file;
          :Display confirmation;
        else (yes)
          :Display error: Road exists;
        endif
      else (no)
        :Display error: Cities not found;
      endif
    case (3)
      :Add Budget for Roads;
      :Get first city name;
      :Get second city name;
      :Find city IDs;
      if (Cities found?) then (yes)
        if (Road exists?) then (yes)
          :Get budget amount;
          :Add budget to matrix;
          :Save roads to file;
        else (no)
          :Display error: No road exists;
        endif
      else (no)
        :Display error: Cities not found;
      endif
    case (4)
      :Edit City;
      :Get city index;
      if (Valid index?) then (yes)
        :Display current name;
        :Get new name;
        repeat
          :Validate new name;
        repeat while (Invalid) is (yes)
        ->Valid;
        :Update city name;
        :Save cities to file;
      else (no)
        :Display error: Invalid index;
      endif
    case (5)
      :Search City by Index;
      :Get city index;
      if (Valid index?) then (yes)
        :Display city;
      else (no)
        :Display error: City not found;
      endif
    case (6)
      :Display Cities;
      if (Cities exist?) then (yes)
        :List all cities;
      else (no)
        :Display message: No cities;
      endif
    case (7)
      :Display Roads;
      :Display cities;
      if (Cities exist?) then (yes)
        :Display road matrix;
      else (no)
        :Display message: No cities;
      endif
    case (8)
      :Display Recorded Data;
      :Display cities;
      :Display road matrix;
      :Display budget matrix;
    case (9)
      :Exit;
      stop
    case (else)
      :Display error: Invalid choice;
  endswitch
repeat while (User choice != 9) is (continue)
->exit;
stop

@enduml

@startuml Rwanda Cities System Class Diagram

class RwandaCitiesSystem {
  - map<int, string> cities
  - vector<vector<int>> roadMatrix
  - vector<vector<double>> budgetMatrix
  - int nextId
  - set<string> validRwandanDistricts
  + RwandaCitiesSystem()
  + initializeDefaultCities()
  + updateMatrices()
  + isValidRwandanDistrict(string)
  + isCityUnique(string)
  + validateAndNormalizeCityName(string)
  + addNewCities()
  + findCityIdByName(string)
  + addRoadsBetweenCities()
  + addBudgetForRoads()
  + editCity()
  + searchCityByIndex()
  + displayCities()
  + displayRoads()
  + displayRecordedData()
  + saveCitiesToFile()
  + saveRoadsToFile()
  + displayMenu()
  + run()
}

@enduml

@startuml Rwanda Cities System Data Flow

actor User
rectangle "Menu System" as Menu
rectangle "Cities Map" as CityMap
rectangle "Road Matrix" as RoadMatrix
rectangle "Budget Matrix" as BudgetMatrix
rectangle "Validation" as Validation
database "cities.txt" as CitiesFile
database "roads.txt" as RoadsFile

User --> Menu : Input
Menu --> "Add City" : Option 1
Menu --> "Add Road" : Option 2
Menu --> "Add Budget" : Option 3
Menu --> "Edit City" : Option 4
Menu --> "Search City" : Option 5
Menu --> "Display Cities" : Option 6
Menu --> "Display Roads" : Option 7
Menu --> "Display Data" : Option 8

"Add City" --> Validation
Validation --> CityMap
"Add Road" --> RoadMatrix
"Add Budget" --> BudgetMatrix

CityMap --> CitiesFile : Save
RoadMatrix --> RoadsFile : Save
BudgetMatrix --> RoadsFile : Save

CityMap --> "Display Cities"
RoadMatrix --> "Display Roads"
CityMap --> "Display Data"
RoadMatrix --> "Display Data"
BudgetMatrix --> "Display Data"

"Display Cities" --> User : Output
"Display Roads" --> User : Output
"Display Data" --> User : Output
"Search City" --> CityMap : Query
"Search City" --> User : Output
"Edit City" --> CityMap : Modify

@enduml

@startuml Rwanda Cities System Function Relationships

rectangle "main()" as Main
rectangle "run()" as Run
rectangle "displayMenu()" as DisplayMenu
rectangle "addNewCities()" as AddNewCities
rectangle "addRoadsBetweenCities()" as AddRoadsBetweenCities
rectangle "addBudgetForRoads()" as AddBudgetForRoads
rectangle "editCity()" as EditCity
rectangle "searchCityByIndex()" as SearchCityByIndex
rectangle "displayCities()" as DisplayCities
rectangle "displayRoads()" as DisplayRoads
rectangle "displayRecordedData()" as DisplayRecordedData
rectangle "validateAndNormalizeCityName()" as ValidateAndNormalizeCityName
rectangle "isValidRwandanDistrict()" as IsValidRwandanDistrict
rectangle "isCityUnique()" as IsCityUnique
rectangle "updateMatrices()" as UpdateMatrices
rectangle "saveCitiesToFile()" as SaveCitiesToFile
rectangle "findCityIdByName()" as FindCityIdByName
rectangle "saveRoadsToFile()" as SaveRoadsToFile

Main --> Run
Run --> DisplayMenu

Run --> AddNewCities
Run --> AddRoadsBetweenCities
Run --> AddBudgetForRoads
Run --> EditCity
Run --> SearchCityByIndex
Run --> DisplayCities
Run --> DisplayRoads
Run --> DisplayRecordedData

AddNewCities --> ValidateAndNormalizeCityName
ValidateAndNormalizeCityName --> IsValidRwandanDistrict
ValidateAndNormalizeCityName --> IsCityUnique
AddNewCities --> UpdateMatrices
AddNewCities --> SaveCitiesToFile

AddRoadsBetweenCities --> FindCityIdByName
AddRoadsBetweenCities --> SaveRoadsToFile

AddBudgetForRoads --> FindCityIdByName
AddBudgetForRoads --> SaveRoadsToFile

EditCity --> ValidateAndNormalizeCityName
EditCity --> SaveCitiesToFile

DisplayRoads --> DisplayCities
DisplayRecordedData --> DisplayCities

@enduml